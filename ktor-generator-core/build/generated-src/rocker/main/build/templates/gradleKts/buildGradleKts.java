package build.templates.gradleKts;

import java.io.IOException;
import com.fizzed.rocker.ForIterator;
import com.fizzed.rocker.RenderingException;
import com.fizzed.rocker.RockerContent;
import com.fizzed.rocker.RockerOutput;
import com.fizzed.rocker.runtime.DefaultRockerTemplate;
import com.fizzed.rocker.runtime.PlainTextUnloadedClassLoader;
// import @ [1:1]
import io.ktor.generator.core.Project;
// import @ [2:1]
import io.ktor.generator.core.features.KtorFeature;
// import @ [3:1]
import io.ktor.generator.core.features.FeatureInstallReceipt;
// import @ [4:1]
import io.ktor.generator.core.features.Features;

/*
 * Auto generated code to render template build/templates/gradleKts/buildGradleKts.rocker.raw
 * Do not edit this file. Changes will eventually be overwritten by Rocker parser!
 */
@SuppressWarnings("unused")
public class buildGradleKts extends com.fizzed.rocker.runtime.DefaultRockerModel {

    static public com.fizzed.rocker.ContentType getContentType() { return com.fizzed.rocker.ContentType.RAW; }
    static public String getTemplateName() { return "buildGradleKts.rocker.raw"; }
    static public String getTemplatePackageName() { return "build.templates.gradleKts"; }
    static public String getHeaderHash() { return "1178576215"; }
    static public String[] getArgumentNames() { return new String[] { "project", "features" }; }

    // argument @ [6:2]
    private Project project;
    // argument @ [6:2]
    private Features features;

    public buildGradleKts project(Project project) {
        this.project = project;
        return this;
    }

    public Project project() {
        return this.project;
    }

    public buildGradleKts features(Features features) {
        this.features = features;
        return this;
    }

    public Features features() {
        return this.features;
    }

    static public buildGradleKts template(Project project, Features features) {
        return new buildGradleKts()
            .project(project)
            .features(features);
    }

    @Override
    protected DefaultRockerTemplate buildTemplate() throws RenderingException {
        // optimized for performance (via rocker.optimize flag; no auto reloading)
        return new Template(this);
    }

    static public class Template extends com.fizzed.rocker.runtime.DefaultRockerTemplate {

        // import org.jetbrains.kotlin.gradle.dsl.Coroutines\nimport org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n\nval ktor_version: String by project\nval kotlin_version: String by project\n\nplugins {\n    application\n    kotlin(\"jvm\") version \"
        static private final byte[] PLAIN_TEXT_0_0;
        // \"\n
        static private final byte[] PLAIN_TEXT_1_0;
        //                 id(\"
        static private final byte[] PLAIN_TEXT_2_0;
        // \") version 
        static private final byte[] PLAIN_TEXT_3_0;
        // \n
        static private final byte[] PLAIN_TEXT_4_0;
        // \")\n
        static private final byte[] PLAIN_TEXT_5_0;
        // }\n\ngroup = \"
        static private final byte[] PLAIN_TEXT_6_0;
        // \"\nversion = \"0.0.1\"\napplication {\n    mainClassName = \"
        static private final byte[] PLAIN_TEXT_7_0;
        // \"\n}\n\nrepositories {\n
        static private final byte[] PLAIN_TEXT_8_0;
        //     
        static private final byte[] PLAIN_TEXT_9_0;
        // ()\n
        static private final byte[] PLAIN_TEXT_10_0;
        //     maven { url = uri(\"
        static private final byte[] PLAIN_TEXT_11_0;
        // \") }\n
        static private final byte[] PLAIN_TEXT_12_0;
        // }\n\ndependencies {\n
        static private final byte[] PLAIN_TEXT_13_0;
        //     implementation(\"
        static private final byte[] PLAIN_TEXT_14_0;
        // :
        static private final byte[] PLAIN_TEXT_15_0;
        // )\")\n
        static private final byte[] PLAIN_TEXT_16_0;
        //     testImplementation \"
        static private final byte[] PLAIN_TEXT_17_0;
        //     testImplementation(\"
        static private final byte[] PLAIN_TEXT_18_0;
        // }\n\nkotlin.sourceSets[\"main\"].kotlin.srcDirs(\"src/main/kotlin\")\nkotlin.sourceSets[\"test\"].kotlin.srcDirs(\"src/test/kotlin\")\n\nsourceSets[\"main\"].resources.srcDirs(\"resources/main\")\nsourceSets[\"test\"].resources.srcDirs(\"resources/test\")
        static private final byte[] PLAIN_TEXT_19_0;

        static {
            PlainTextUnloadedClassLoader loader = PlainTextUnloadedClassLoader.tryLoad(buildGradleKts.class.getClassLoader(), buildGradleKts.class.getName() + "$PlainText", "UTF-8");
            PLAIN_TEXT_0_0 = loader.tryGet("PLAIN_TEXT_0_0");
            PLAIN_TEXT_1_0 = loader.tryGet("PLAIN_TEXT_1_0");
            PLAIN_TEXT_2_0 = loader.tryGet("PLAIN_TEXT_2_0");
            PLAIN_TEXT_3_0 = loader.tryGet("PLAIN_TEXT_3_0");
            PLAIN_TEXT_4_0 = loader.tryGet("PLAIN_TEXT_4_0");
            PLAIN_TEXT_5_0 = loader.tryGet("PLAIN_TEXT_5_0");
            PLAIN_TEXT_6_0 = loader.tryGet("PLAIN_TEXT_6_0");
            PLAIN_TEXT_7_0 = loader.tryGet("PLAIN_TEXT_7_0");
            PLAIN_TEXT_8_0 = loader.tryGet("PLAIN_TEXT_8_0");
            PLAIN_TEXT_9_0 = loader.tryGet("PLAIN_TEXT_9_0");
            PLAIN_TEXT_10_0 = loader.tryGet("PLAIN_TEXT_10_0");
            PLAIN_TEXT_11_0 = loader.tryGet("PLAIN_TEXT_11_0");
            PLAIN_TEXT_12_0 = loader.tryGet("PLAIN_TEXT_12_0");
            PLAIN_TEXT_13_0 = loader.tryGet("PLAIN_TEXT_13_0");
            PLAIN_TEXT_14_0 = loader.tryGet("PLAIN_TEXT_14_0");
            PLAIN_TEXT_15_0 = loader.tryGet("PLAIN_TEXT_15_0");
            PLAIN_TEXT_16_0 = loader.tryGet("PLAIN_TEXT_16_0");
            PLAIN_TEXT_17_0 = loader.tryGet("PLAIN_TEXT_17_0");
            PLAIN_TEXT_18_0 = loader.tryGet("PLAIN_TEXT_18_0");
            PLAIN_TEXT_19_0 = loader.tryGet("PLAIN_TEXT_19_0");
        }

        // argument @ [6:2]
        protected final Project project;
        // argument @ [6:2]
        protected final Features features;

        public Template(buildGradleKts model) {
            super(model);
            __internal.setCharset("UTF-8");
            __internal.setContentType(getContentType());
            __internal.setTemplateName(getTemplateName());
            __internal.setTemplatePackageName(getTemplatePackageName());
            this.project = model.project();
            this.features = model.features();
        }

        @Override
        protected void __doRender() throws IOException, RenderingException {
            // PlainText @ [9:2]
            __internal.aboutToExecutePosInTemplate(9, 2);
            __internal.writeValue(PLAIN_TEXT_0_0);
            // ValueExpression @ [19:28]
            __internal.aboutToExecutePosInTemplate(19, 28);
            __internal.renderValue(project.getKotlinVersion(), false);
            // PlainText @ [19:55]
            __internal.aboutToExecutePosInTemplate(19, 55);
            __internal.writeValue(PLAIN_TEXT_1_0);
            // WithBlockBegin @ [20:5]
            __internal.aboutToExecutePosInTemplate(20, 5);
            com.fizzed.rocker.runtime.WithBlock.with(features.getAllGradlePlugins(), false, (requiredPlugins) -> {
                // ForBlockBegin @ [21:9]
                __internal.aboutToExecutePosInTemplate(21, 9);
                try {
                    com.fizzed.rocker.runtime.Java8Iterator.forEach(requiredPlugins, (plugin) -> {
                        try {
                            // IfBlockBegin @ [22:13]
                            __internal.aboutToExecutePosInTemplate(22, 13);
                            if (plugin.getVersion() != null) {
                                // PlainText @ [22:48]
                                __internal.aboutToExecutePosInTemplate(22, 48);
                                __internal.writeValue(PLAIN_TEXT_2_0);
                                // ValueExpression @ [23:21]
                                __internal.aboutToExecutePosInTemplate(23, 21);
                                __internal.renderValue(plugin.getId(), false);
                                // PlainText @ [23:36]
                                __internal.aboutToExecutePosInTemplate(23, 36);
                                __internal.writeValue(PLAIN_TEXT_3_0);
                                // ValueExpression @ [23:47]
                                __internal.aboutToExecutePosInTemplate(23, 47);
                                __internal.renderValue(plugin.getVersion(), false);
                                // PlainText @ [23:67]
                                __internal.aboutToExecutePosInTemplate(23, 67);
                                __internal.writeValue(PLAIN_TEXT_4_0);
                                // IfBlockElse @ [24:13]
                                __internal.aboutToExecutePosInTemplate(24, 13);
                            } else { // else @ [24:13]
                                // PlainText @ [24:21]
                                __internal.aboutToExecutePosInTemplate(24, 21);
                                __internal.writeValue(PLAIN_TEXT_2_0);
                                // ValueExpression @ [25:21]
                                __internal.aboutToExecutePosInTemplate(25, 21);
                                __internal.renderValue(plugin.getId(), false);
                                // PlainText @ [25:36]
                                __internal.aboutToExecutePosInTemplate(25, 36);
                                __internal.writeValue(PLAIN_TEXT_5_0);
                                // IfBlockEnd @ [22:13]
                                __internal.aboutToExecutePosInTemplate(22, 13);
                            } // if end @ [22:13]
                            // ForBlockEnd @ [21:9]
                            __internal.aboutToExecutePosInTemplate(21, 9);
                        } catch (com.fizzed.rocker.runtime.ContinueException e) {
                            // support for continuing for loops
                        }
                    }); // for end @ [21:9]
                } catch (com.fizzed.rocker.runtime.BreakException e) {
                    // support for breaking for loops
                }
                // WithBlockEnd @ [20:5]
                __internal.aboutToExecutePosInTemplate(20, 5);
            }); // with end @ [20:5]
            // PlainText @ [28:6]
            __internal.aboutToExecutePosInTemplate(28, 6);
            __internal.writeValue(PLAIN_TEXT_6_0);
            // ValueExpression @ [31:10]
            __internal.aboutToExecutePosInTemplate(31, 10);
            __internal.renderValue(project.getGroupName(), false);
            // PlainText @ [31:33]
            __internal.aboutToExecutePosInTemplate(31, 33);
            __internal.writeValue(PLAIN_TEXT_7_0);
            // ValueExpression @ [34:22]
            __internal.aboutToExecutePosInTemplate(34, 22);
            __internal.renderValue(project.getMainClassName(), false);
            // PlainText @ [34:49]
            __internal.aboutToExecutePosInTemplate(34, 49);
            __internal.writeValue(PLAIN_TEXT_8_0);
            // WithBlockBegin @ [38:5]
            __internal.aboutToExecutePosInTemplate(38, 5);
            com.fizzed.rocker.runtime.WithBlock.with(features.getAllGradleRepositoryFunctions(), false, (repos) -> {
                // ForBlockBegin @ [39:9]
                __internal.aboutToExecutePosInTemplate(39, 9);
                try {
                    com.fizzed.rocker.runtime.Java8Iterator.forEach(repos, (fun) -> {
                        try {
                            // PlainText @ [39:28]
                            __internal.aboutToExecutePosInTemplate(39, 28);
                            __internal.writeValue(PLAIN_TEXT_9_0);
                            // ValueExpression @ [40:5]
                            __internal.aboutToExecutePosInTemplate(40, 5);
                            __internal.renderValue(raw(fun), false);
                            // PlainText @ [40:14]
                            __internal.aboutToExecutePosInTemplate(40, 14);
                            __internal.writeValue(PLAIN_TEXT_10_0);
                            // ForBlockEnd @ [39:9]
                            __internal.aboutToExecutePosInTemplate(39, 9);
                        } catch (com.fizzed.rocker.runtime.ContinueException e) {
                            // support for continuing for loops
                        }
                    }); // for end @ [39:9]
                } catch (com.fizzed.rocker.runtime.BreakException e) {
                    // support for breaking for loops
                }
                // WithBlockEnd @ [38:5]
                __internal.aboutToExecutePosInTemplate(38, 5);
            }); // with end @ [38:5]
            // WithBlockBegin @ [43:5]
            __internal.aboutToExecutePosInTemplate(43, 5);
            com.fizzed.rocker.runtime.WithBlock.with(features.getAllGradleRepositoryUrls(), false, (repos) -> {
                // ForBlockBegin @ [44:9]
                __internal.aboutToExecutePosInTemplate(44, 9);
                try {
                    com.fizzed.rocker.runtime.Java8Iterator.forEach(repos, (url) -> {
                        try {
                            // PlainText @ [44:28]
                            __internal.aboutToExecutePosInTemplate(44, 28);
                            __internal.writeValue(PLAIN_TEXT_11_0);
                            // ValueExpression @ [45:24]
                            __internal.aboutToExecutePosInTemplate(45, 24);
                            __internal.renderValue(url, false);
                            // PlainText @ [45:28]
                            __internal.aboutToExecutePosInTemplate(45, 28);
                            __internal.writeValue(PLAIN_TEXT_12_0);
                            // ForBlockEnd @ [44:9]
                            __internal.aboutToExecutePosInTemplate(44, 9);
                        } catch (com.fizzed.rocker.runtime.ContinueException e) {
                            // support for continuing for loops
                        }
                    }); // for end @ [44:9]
                } catch (com.fizzed.rocker.runtime.BreakException e) {
                    // support for breaking for loops
                }
                // WithBlockEnd @ [43:5]
                __internal.aboutToExecutePosInTemplate(43, 5);
            }); // with end @ [43:5]
            // PlainText @ [47:6]
            __internal.aboutToExecutePosInTemplate(47, 6);
            __internal.writeValue(PLAIN_TEXT_13_0);
            // WithBlockBegin @ [51:5]
            __internal.aboutToExecutePosInTemplate(51, 5);
            com.fizzed.rocker.runtime.WithBlock.with(features.getGradleDependencies(), false, (dependencies) -> {
                // ForBlockBegin @ [52:9]
                __internal.aboutToExecutePosInTemplate(52, 9);
                try {
                    com.fizzed.rocker.runtime.Java8Iterator.forEach(dependencies, (dependency) -> {
                        try {
                            // IfBlockBegin @ [53:13]
                            __internal.aboutToExecutePosInTemplate(53, 13);
                            if (dependency.getVersion() != null) {
                                // PlainText @ [53:52]
                                __internal.aboutToExecutePosInTemplate(53, 52);
                                __internal.writeValue(PLAIN_TEXT_14_0);
                                // ValueExpression @ [54:21]
                                __internal.aboutToExecutePosInTemplate(54, 21);
                                __internal.renderValue(dependency.getGroup(), false);
                                // PlainText @ [54:43]
                                __internal.aboutToExecutePosInTemplate(54, 43);
                                __internal.writeValue(PLAIN_TEXT_15_0);
                                // ValueExpression @ [54:44]
                                __internal.aboutToExecutePosInTemplate(54, 44);
                                __internal.renderValue(dependency.getArtifact(), false);
                                // PlainText @ [54:69]
                                __internal.aboutToExecutePosInTemplate(54, 69);
                                __internal.writeValue(PLAIN_TEXT_15_0);
                                // ValueExpression @ [54:70]
                                __internal.aboutToExecutePosInTemplate(54, 70);
                                __internal.renderValue(dependency.getVersion().getGradleFormat(), false);
                                // PlainText @ [54:112]
                                __internal.aboutToExecutePosInTemplate(54, 112);
                                __internal.writeValue(PLAIN_TEXT_16_0);
                                // IfBlockElse @ [55:13]
                                __internal.aboutToExecutePosInTemplate(55, 13);
                            } else { // else @ [55:13]
                                // PlainText @ [55:21]
                                __internal.aboutToExecutePosInTemplate(55, 21);
                                __internal.writeValue(PLAIN_TEXT_14_0);
                                // ValueExpression @ [56:21]
                                __internal.aboutToExecutePosInTemplate(56, 21);
                                __internal.renderValue(dependency.getGroup(), false);
                                // PlainText @ [56:43]
                                __internal.aboutToExecutePosInTemplate(56, 43);
                                __internal.writeValue(PLAIN_TEXT_15_0);
                                // ValueExpression @ [56:44]
                                __internal.aboutToExecutePosInTemplate(56, 44);
                                __internal.renderValue(dependency.getArtifact(), false);
                                // PlainText @ [56:69]
                                __internal.aboutToExecutePosInTemplate(56, 69);
                                __internal.writeValue(PLAIN_TEXT_5_0);
                                // IfBlockEnd @ [53:13]
                                __internal.aboutToExecutePosInTemplate(53, 13);
                            } // if end @ [53:13]
                            // ForBlockEnd @ [52:9]
                            __internal.aboutToExecutePosInTemplate(52, 9);
                        } catch (com.fizzed.rocker.runtime.ContinueException e) {
                            // support for continuing for loops
                        }
                    }); // for end @ [52:9]
                } catch (com.fizzed.rocker.runtime.BreakException e) {
                    // support for breaking for loops
                }
                // WithBlockEnd @ [51:5]
                __internal.aboutToExecutePosInTemplate(51, 5);
            }); // with end @ [51:5]
            // WithBlockBegin @ [60:5]
            __internal.aboutToExecutePosInTemplate(60, 5);
            com.fizzed.rocker.runtime.WithBlock.with(features.getTestGradleDependencies(), false, (dependencies) -> {
                // ForBlockBegin @ [61:9]
                __internal.aboutToExecutePosInTemplate(61, 9);
                try {
                    com.fizzed.rocker.runtime.Java8Iterator.forEach(dependencies, (dependency) -> {
                        try {
                            // IfBlockBegin @ [62:13]
                            __internal.aboutToExecutePosInTemplate(62, 13);
                            if (dependency.getVersion() != null) {
                                // PlainText @ [62:52]
                                __internal.aboutToExecutePosInTemplate(62, 52);
                                __internal.writeValue(PLAIN_TEXT_17_0);
                                // ValueExpression @ [63:25]
                                __internal.aboutToExecutePosInTemplate(63, 25);
                                __internal.renderValue(dependency.getGroup(), false);
                                // PlainText @ [63:47]
                                __internal.aboutToExecutePosInTemplate(63, 47);
                                __internal.writeValue(PLAIN_TEXT_15_0);
                                // ValueExpression @ [63:48]
                                __internal.aboutToExecutePosInTemplate(63, 48);
                                __internal.renderValue(dependency.getArtifact(), false);
                                // PlainText @ [63:73]
                                __internal.aboutToExecutePosInTemplate(63, 73);
                                __internal.writeValue(PLAIN_TEXT_15_0);
                                // ValueExpression @ [63:74]
                                __internal.aboutToExecutePosInTemplate(63, 74);
                                __internal.renderValue(dependency.getVersion().getGradleFormat(), false);
                                // PlainText @ [63:116]
                                __internal.aboutToExecutePosInTemplate(63, 116);
                                __internal.writeValue(PLAIN_TEXT_1_0);
                                // IfBlockElse @ [64:13]
                                __internal.aboutToExecutePosInTemplate(64, 13);
                            } else { // else @ [64:13]
                                // PlainText @ [64:21]
                                __internal.aboutToExecutePosInTemplate(64, 21);
                                __internal.writeValue(PLAIN_TEXT_18_0);
                                // ValueExpression @ [65:25]
                                __internal.aboutToExecutePosInTemplate(65, 25);
                                __internal.renderValue(dependency.getGroup(), false);
                                // PlainText @ [65:47]
                                __internal.aboutToExecutePosInTemplate(65, 47);
                                __internal.writeValue(PLAIN_TEXT_15_0);
                                // ValueExpression @ [65:48]
                                __internal.aboutToExecutePosInTemplate(65, 48);
                                __internal.renderValue(dependency.getArtifact(), false);
                                // PlainText @ [65:73]
                                __internal.aboutToExecutePosInTemplate(65, 73);
                                __internal.writeValue(PLAIN_TEXT_5_0);
                                // IfBlockEnd @ [62:13]
                                __internal.aboutToExecutePosInTemplate(62, 13);
                            } // if end @ [62:13]
                            // ForBlockEnd @ [61:9]
                            __internal.aboutToExecutePosInTemplate(61, 9);
                        } catch (com.fizzed.rocker.runtime.ContinueException e) {
                            // support for continuing for loops
                        }
                    }); // for end @ [61:9]
                } catch (com.fizzed.rocker.runtime.BreakException e) {
                    // support for breaking for loops
                }
                // WithBlockEnd @ [60:5]
                __internal.aboutToExecutePosInTemplate(60, 5);
            }); // with end @ [60:5]
            // PlainText @ [68:6]
            __internal.aboutToExecutePosInTemplate(68, 6);
            __internal.writeValue(PLAIN_TEXT_19_0);
        }
    }

    private static class PlainText {

        static private final String PLAIN_TEXT_0_0 = "import org.jetbrains.kotlin.gradle.dsl.Coroutines\nimport org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n\nval ktor_version: String by project\nval kotlin_version: String by project\n\nplugins {\n    application\n    kotlin(\"jvm\") version \"";
        static private final String PLAIN_TEXT_1_0 = "\"\n";
        static private final String PLAIN_TEXT_2_0 = "                id(\"";
        static private final String PLAIN_TEXT_3_0 = "\") version ";
        static private final String PLAIN_TEXT_4_0 = "\n";
        static private final String PLAIN_TEXT_5_0 = "\")\n";
        static private final String PLAIN_TEXT_6_0 = "}\n\ngroup = \"";
        static private final String PLAIN_TEXT_7_0 = "\"\nversion = \"0.0.1\"\napplication {\n    mainClassName = \"";
        static private final String PLAIN_TEXT_8_0 = "\"\n}\n\nrepositories {\n";
        static private final String PLAIN_TEXT_9_0 = "    ";
        static private final String PLAIN_TEXT_10_0 = "()\n";
        static private final String PLAIN_TEXT_11_0 = "    maven { url = uri(\"";
        static private final String PLAIN_TEXT_12_0 = "\") }\n";
        static private final String PLAIN_TEXT_13_0 = "}\n\ndependencies {\n";
        static private final String PLAIN_TEXT_14_0 = "    implementation(\"";
        static private final String PLAIN_TEXT_15_0 = ":";
        static private final String PLAIN_TEXT_16_0 = ")\")\n";
        static private final String PLAIN_TEXT_17_0 = "    testImplementation \"";
        static private final String PLAIN_TEXT_18_0 = "    testImplementation(\"";
        static private final String PLAIN_TEXT_19_0 = "}\n\nkotlin.sourceSets[\"main\"].kotlin.srcDirs(\"src/main/kotlin\")\nkotlin.sourceSets[\"test\"].kotlin.srcDirs(\"src/test/kotlin\")\n\nsourceSets[\"main\"].resources.srcDirs(\"resources/main\")\nsourceSets[\"test\"].resources.srcDirs(\"resources/test\")";

    }

}
