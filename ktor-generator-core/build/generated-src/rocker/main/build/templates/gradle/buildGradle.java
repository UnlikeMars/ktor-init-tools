package build.templates.gradle;

import java.io.IOException;
import com.fizzed.rocker.ForIterator;
import com.fizzed.rocker.RenderingException;
import com.fizzed.rocker.RockerContent;
import com.fizzed.rocker.RockerOutput;
import com.fizzed.rocker.runtime.DefaultRockerTemplate;
import com.fizzed.rocker.runtime.PlainTextUnloadedClassLoader;
// import @ [1:1]
import io.ktor.generator.core.Project;
// import @ [2:1]
import io.ktor.generator.core.features.KtorFeature;
// import @ [3:1]
import io.ktor.generator.core.features.FeatureInstallReceipt;
// import @ [4:1]
import io.ktor.generator.core.features.Features;

/*
 * Auto generated code to render template build/templates/gradle/buildGradle.rocker.raw
 * Do not edit this file. Changes will eventually be overwritten by Rocker parser!
 */
@SuppressWarnings("unused")
public class buildGradle extends com.fizzed.rocker.runtime.DefaultRockerModel {

    static public com.fizzed.rocker.ContentType getContentType() { return com.fizzed.rocker.ContentType.RAW; }
    static public String getTemplateName() { return "buildGradle.rocker.raw"; }
    static public String getTemplatePackageName() { return "build.templates.gradle"; }
    static public String getHeaderHash() { return "1178576215"; }
    static public String[] getArgumentNames() { return new String[] { "project", "features" }; }

    // argument @ [6:2]
    private Project project;
    // argument @ [6:2]
    private Features features;

    public buildGradle project(Project project) {
        this.project = project;
        return this;
    }

    public Project project() {
        return this.project;
    }

    public buildGradle features(Features features) {
        this.features = features;
        return this;
    }

    public Features features() {
        return this.features;
    }

    static public buildGradle template(Project project, Features features) {
        return new buildGradle()
            .project(project)
            .features(features);
    }

    @Override
    protected DefaultRockerTemplate buildTemplate() throws RenderingException {
        // optimized for performance (via rocker.optimize flag; no auto reloading)
        return new Template(this);
    }

    static public class Template extends com.fizzed.rocker.runtime.DefaultRockerTemplate {

        // plugins {\n    id 'application'\n    id 'org.jetbrains.kotlin.jvm' version '
        static private final byte[] PLAIN_TEXT_0_0;
        // '\n
        static private final byte[] PLAIN_TEXT_1_0;
        //     id \"
        static private final byte[] PLAIN_TEXT_2_0;
        // \" version \"
        static private final byte[] PLAIN_TEXT_3_0;
        // \"\n
        static private final byte[] PLAIN_TEXT_4_0;
        // }\n\ngroup \"
        static private final byte[] PLAIN_TEXT_5_0;
        // \"\nversion \"0.0.1\"\nmainClassName = \"
        static private final byte[] PLAIN_TEXT_6_0;
        // \"\n\nrepositories {\n
        static private final byte[] PLAIN_TEXT_7_0;
        //     
        static private final byte[] PLAIN_TEXT_8_0;
        // ()\n
        static private final byte[] PLAIN_TEXT_9_0;
        //     maven { url: \"
        static private final byte[] PLAIN_TEXT_10_0;
        // \" }\n
        static private final byte[] PLAIN_TEXT_11_0;
        // }\n\ndependencies {\n
        static private final byte[] PLAIN_TEXT_12_0;
        //     implementation \"
        static private final byte[] PLAIN_TEXT_13_0;
        // :
        static private final byte[] PLAIN_TEXT_14_0;
        //     testImplementation \"
        static private final byte[] PLAIN_TEXT_15_0;
        // }\n\nsourceSets {\n    main {\n        kotlin {\n            srcDirs 'src/main/kotlin'\n        }\n        resources {\n            srcDirs 'resources/main'\n        }\n    }\n    test {\n        kotlin {\n            srcDirs 'src/test/kotlin'\n        }\n        resources {\n            srcDirs 'resources/test'\n        }\n    }\n}
        static private final byte[] PLAIN_TEXT_16_0;

        static {
            PlainTextUnloadedClassLoader loader = PlainTextUnloadedClassLoader.tryLoad(buildGradle.class.getClassLoader(), buildGradle.class.getName() + "$PlainText", "UTF-8");
            PLAIN_TEXT_0_0 = loader.tryGet("PLAIN_TEXT_0_0");
            PLAIN_TEXT_1_0 = loader.tryGet("PLAIN_TEXT_1_0");
            PLAIN_TEXT_2_0 = loader.tryGet("PLAIN_TEXT_2_0");
            PLAIN_TEXT_3_0 = loader.tryGet("PLAIN_TEXT_3_0");
            PLAIN_TEXT_4_0 = loader.tryGet("PLAIN_TEXT_4_0");
            PLAIN_TEXT_5_0 = loader.tryGet("PLAIN_TEXT_5_0");
            PLAIN_TEXT_6_0 = loader.tryGet("PLAIN_TEXT_6_0");
            PLAIN_TEXT_7_0 = loader.tryGet("PLAIN_TEXT_7_0");
            PLAIN_TEXT_8_0 = loader.tryGet("PLAIN_TEXT_8_0");
            PLAIN_TEXT_9_0 = loader.tryGet("PLAIN_TEXT_9_0");
            PLAIN_TEXT_10_0 = loader.tryGet("PLAIN_TEXT_10_0");
            PLAIN_TEXT_11_0 = loader.tryGet("PLAIN_TEXT_11_0");
            PLAIN_TEXT_12_0 = loader.tryGet("PLAIN_TEXT_12_0");
            PLAIN_TEXT_13_0 = loader.tryGet("PLAIN_TEXT_13_0");
            PLAIN_TEXT_14_0 = loader.tryGet("PLAIN_TEXT_14_0");
            PLAIN_TEXT_15_0 = loader.tryGet("PLAIN_TEXT_15_0");
            PLAIN_TEXT_16_0 = loader.tryGet("PLAIN_TEXT_16_0");
        }

        // argument @ [6:2]
        protected final Project project;
        // argument @ [6:2]
        protected final Features features;

        public Template(buildGradle model) {
            super(model);
            __internal.setCharset("UTF-8");
            __internal.setContentType(getContentType());
            __internal.setTemplateName(getTemplateName());
            __internal.setTemplatePackageName(getTemplatePackageName());
            this.project = model.project();
            this.features = model.features();
        }

        @Override
        protected void __doRender() throws IOException, RenderingException {
            // PlainText @ [9:2]
            __internal.aboutToExecutePosInTemplate(9, 2);
            __internal.writeValue(PLAIN_TEXT_0_0);
            // ValueExpression @ [13:44]
            __internal.aboutToExecutePosInTemplate(13, 44);
            __internal.renderValue(project.getKotlinVersion(), false);
            // PlainText @ [13:71]
            __internal.aboutToExecutePosInTemplate(13, 71);
            __internal.writeValue(PLAIN_TEXT_1_0);
            // WithBlockBegin @ [14:5]
            __internal.aboutToExecutePosInTemplate(14, 5);
            com.fizzed.rocker.runtime.WithBlock.with(features.getAllGradlePlugins(), false, (requiredPlugins) -> {
                // ForBlockBegin @ [15:9]
                __internal.aboutToExecutePosInTemplate(15, 9);
                try {
                    com.fizzed.rocker.runtime.Java8Iterator.forEach(requiredPlugins, (plugin) -> {
                        try {
                            // IfBlockBegin @ [16:13]
                            __internal.aboutToExecutePosInTemplate(16, 13);
                            if (plugin.getVersion() != null) {
                                // PlainText @ [16:48]
                                __internal.aboutToExecutePosInTemplate(16, 48);
                                __internal.writeValue(PLAIN_TEXT_2_0);
                                // ValueExpression @ [17:9]
                                __internal.aboutToExecutePosInTemplate(17, 9);
                                __internal.renderValue(plugin.getId(), false);
                                // PlainText @ [17:24]
                                __internal.aboutToExecutePosInTemplate(17, 24);
                                __internal.writeValue(PLAIN_TEXT_3_0);
                                // ValueExpression @ [17:35]
                                __internal.aboutToExecutePosInTemplate(17, 35);
                                __internal.renderValue(plugin.getVersion(), false);
                                // PlainText @ [17:55]
                                __internal.aboutToExecutePosInTemplate(17, 55);
                                __internal.writeValue(PLAIN_TEXT_4_0);
                                // IfBlockElse @ [18:13]
                                __internal.aboutToExecutePosInTemplate(18, 13);
                            } else { // else @ [18:13]
                                // PlainText @ [18:21]
                                __internal.aboutToExecutePosInTemplate(18, 21);
                                __internal.writeValue(PLAIN_TEXT_2_0);
                                // ValueExpression @ [19:9]
                                __internal.aboutToExecutePosInTemplate(19, 9);
                                __internal.renderValue(plugin.getId(), false);
                                // PlainText @ [19:24]
                                __internal.aboutToExecutePosInTemplate(19, 24);
                                __internal.writeValue(PLAIN_TEXT_4_0);
                                // IfBlockEnd @ [16:13]
                                __internal.aboutToExecutePosInTemplate(16, 13);
                            } // if end @ [16:13]
                            // ForBlockEnd @ [15:9]
                            __internal.aboutToExecutePosInTemplate(15, 9);
                        } catch (com.fizzed.rocker.runtime.ContinueException e) {
                            // support for continuing for loops
                        }
                    }); // for end @ [15:9]
                } catch (com.fizzed.rocker.runtime.BreakException e) {
                    // support for breaking for loops
                }
                // WithBlockEnd @ [14:5]
                __internal.aboutToExecutePosInTemplate(14, 5);
            }); // with end @ [14:5]
            // PlainText @ [22:6]
            __internal.aboutToExecutePosInTemplate(22, 6);
            __internal.writeValue(PLAIN_TEXT_5_0);
            // ValueExpression @ [25:8]
            __internal.aboutToExecutePosInTemplate(25, 8);
            __internal.renderValue(project.getGroupName(), false);
            // PlainText @ [25:31]
            __internal.aboutToExecutePosInTemplate(25, 31);
            __internal.writeValue(PLAIN_TEXT_6_0);
            // ValueExpression @ [27:18]
            __internal.aboutToExecutePosInTemplate(27, 18);
            __internal.renderValue(project.getMainClassName(), false);
            // PlainText @ [27:45]
            __internal.aboutToExecutePosInTemplate(27, 45);
            __internal.writeValue(PLAIN_TEXT_7_0);
            // WithBlockBegin @ [30:5]
            __internal.aboutToExecutePosInTemplate(30, 5);
            com.fizzed.rocker.runtime.WithBlock.with(features.getAllGradleRepositoryFunctions(), false, (repos) -> {
                // ForBlockBegin @ [31:9]
                __internal.aboutToExecutePosInTemplate(31, 9);
                try {
                    com.fizzed.rocker.runtime.Java8Iterator.forEach(repos, (fun) -> {
                        try {
                            // PlainText @ [31:28]
                            __internal.aboutToExecutePosInTemplate(31, 28);
                            __internal.writeValue(PLAIN_TEXT_8_0);
                            // ValueExpression @ [32:5]
                            __internal.aboutToExecutePosInTemplate(32, 5);
                            __internal.renderValue(raw(fun), false);
                            // PlainText @ [32:14]
                            __internal.aboutToExecutePosInTemplate(32, 14);
                            __internal.writeValue(PLAIN_TEXT_9_0);
                            // ForBlockEnd @ [31:9]
                            __internal.aboutToExecutePosInTemplate(31, 9);
                        } catch (com.fizzed.rocker.runtime.ContinueException e) {
                            // support for continuing for loops
                        }
                    }); // for end @ [31:9]
                } catch (com.fizzed.rocker.runtime.BreakException e) {
                    // support for breaking for loops
                }
                // WithBlockEnd @ [30:5]
                __internal.aboutToExecutePosInTemplate(30, 5);
            }); // with end @ [30:5]
            // WithBlockBegin @ [35:5]
            __internal.aboutToExecutePosInTemplate(35, 5);
            com.fizzed.rocker.runtime.WithBlock.with(features.getAllGradleRepositoryUrls(), false, (repos) -> {
                // ForBlockBegin @ [36:9]
                __internal.aboutToExecutePosInTemplate(36, 9);
                try {
                    com.fizzed.rocker.runtime.Java8Iterator.forEach(repos, (url) -> {
                        try {
                            // PlainText @ [36:28]
                            __internal.aboutToExecutePosInTemplate(36, 28);
                            __internal.writeValue(PLAIN_TEXT_10_0);
                            // ValueExpression @ [37:19]
                            __internal.aboutToExecutePosInTemplate(37, 19);
                            __internal.renderValue(url, false);
                            // PlainText @ [37:23]
                            __internal.aboutToExecutePosInTemplate(37, 23);
                            __internal.writeValue(PLAIN_TEXT_11_0);
                            // ForBlockEnd @ [36:9]
                            __internal.aboutToExecutePosInTemplate(36, 9);
                        } catch (com.fizzed.rocker.runtime.ContinueException e) {
                            // support for continuing for loops
                        }
                    }); // for end @ [36:9]
                } catch (com.fizzed.rocker.runtime.BreakException e) {
                    // support for breaking for loops
                }
                // WithBlockEnd @ [35:5]
                __internal.aboutToExecutePosInTemplate(35, 5);
            }); // with end @ [35:5]
            // PlainText @ [39:6]
            __internal.aboutToExecutePosInTemplate(39, 6);
            __internal.writeValue(PLAIN_TEXT_12_0);
            // WithBlockBegin @ [43:5]
            __internal.aboutToExecutePosInTemplate(43, 5);
            com.fizzed.rocker.runtime.WithBlock.with(features.getGradleDependencies(), false, (dependencies) -> {
                // ForBlockBegin @ [44:9]
                __internal.aboutToExecutePosInTemplate(44, 9);
                try {
                    com.fizzed.rocker.runtime.Java8Iterator.forEach(dependencies, (dependency) -> {
                        try {
                            // IfBlockBegin @ [45:13]
                            __internal.aboutToExecutePosInTemplate(45, 13);
                            if (dependency.getVersion() != null) {
                                // PlainText @ [45:52]
                                __internal.aboutToExecutePosInTemplate(45, 52);
                                __internal.writeValue(PLAIN_TEXT_13_0);
                                // ValueExpression @ [46:21]
                                __internal.aboutToExecutePosInTemplate(46, 21);
                                __internal.renderValue(dependency.getGroup(), false);
                                // PlainText @ [46:43]
                                __internal.aboutToExecutePosInTemplate(46, 43);
                                __internal.writeValue(PLAIN_TEXT_14_0);
                                // ValueExpression @ [46:44]
                                __internal.aboutToExecutePosInTemplate(46, 44);
                                __internal.renderValue(dependency.getArtifact(), false);
                                // PlainText @ [46:69]
                                __internal.aboutToExecutePosInTemplate(46, 69);
                                __internal.writeValue(PLAIN_TEXT_14_0);
                                // ValueExpression @ [46:70]
                                __internal.aboutToExecutePosInTemplate(46, 70);
                                __internal.renderValue(dependency.getVersion().getGradleFormat(), false);
                                // PlainText @ [46:112]
                                __internal.aboutToExecutePosInTemplate(46, 112);
                                __internal.writeValue(PLAIN_TEXT_4_0);
                                // IfBlockElse @ [47:13]
                                __internal.aboutToExecutePosInTemplate(47, 13);
                            } else { // else @ [47:13]
                                // PlainText @ [47:21]
                                __internal.aboutToExecutePosInTemplate(47, 21);
                                __internal.writeValue(PLAIN_TEXT_13_0);
                                // ValueExpression @ [48:21]
                                __internal.aboutToExecutePosInTemplate(48, 21);
                                __internal.renderValue(dependency.getGroup(), false);
                                // PlainText @ [48:43]
                                __internal.aboutToExecutePosInTemplate(48, 43);
                                __internal.writeValue(PLAIN_TEXT_14_0);
                                // ValueExpression @ [48:44]
                                __internal.aboutToExecutePosInTemplate(48, 44);
                                __internal.renderValue(dependency.getArtifact(), false);
                                // PlainText @ [48:69]
                                __internal.aboutToExecutePosInTemplate(48, 69);
                                __internal.writeValue(PLAIN_TEXT_4_0);
                                // IfBlockEnd @ [45:13]
                                __internal.aboutToExecutePosInTemplate(45, 13);
                            } // if end @ [45:13]
                            // ForBlockEnd @ [44:9]
                            __internal.aboutToExecutePosInTemplate(44, 9);
                        } catch (com.fizzed.rocker.runtime.ContinueException e) {
                            // support for continuing for loops
                        }
                    }); // for end @ [44:9]
                } catch (com.fizzed.rocker.runtime.BreakException e) {
                    // support for breaking for loops
                }
                // WithBlockEnd @ [43:5]
                __internal.aboutToExecutePosInTemplate(43, 5);
            }); // with end @ [43:5]
            // WithBlockBegin @ [52:5]
            __internal.aboutToExecutePosInTemplate(52, 5);
            com.fizzed.rocker.runtime.WithBlock.with(features.getTestGradleDependencies(), false, (dependencies) -> {
                // ForBlockBegin @ [53:9]
                __internal.aboutToExecutePosInTemplate(53, 9);
                try {
                    com.fizzed.rocker.runtime.Java8Iterator.forEach(dependencies, (dependency) -> {
                        try {
                            // IfBlockBegin @ [54:13]
                            __internal.aboutToExecutePosInTemplate(54, 13);
                            if (dependency.getVersion() != null) {
                                // PlainText @ [54:52]
                                __internal.aboutToExecutePosInTemplate(54, 52);
                                __internal.writeValue(PLAIN_TEXT_15_0);
                                // ValueExpression @ [55:25]
                                __internal.aboutToExecutePosInTemplate(55, 25);
                                __internal.renderValue(dependency.getGroup(), false);
                                // PlainText @ [55:47]
                                __internal.aboutToExecutePosInTemplate(55, 47);
                                __internal.writeValue(PLAIN_TEXT_14_0);
                                // ValueExpression @ [55:48]
                                __internal.aboutToExecutePosInTemplate(55, 48);
                                __internal.renderValue(dependency.getArtifact(), false);
                                // PlainText @ [55:73]
                                __internal.aboutToExecutePosInTemplate(55, 73);
                                __internal.writeValue(PLAIN_TEXT_14_0);
                                // ValueExpression @ [55:74]
                                __internal.aboutToExecutePosInTemplate(55, 74);
                                __internal.renderValue(dependency.getVersion().getGradleFormat(), false);
                                // PlainText @ [55:116]
                                __internal.aboutToExecutePosInTemplate(55, 116);
                                __internal.writeValue(PLAIN_TEXT_4_0);
                                // IfBlockElse @ [56:13]
                                __internal.aboutToExecutePosInTemplate(56, 13);
                            } else { // else @ [56:13]
                                // PlainText @ [56:21]
                                __internal.aboutToExecutePosInTemplate(56, 21);
                                __internal.writeValue(PLAIN_TEXT_15_0);
                                // ValueExpression @ [57:25]
                                __internal.aboutToExecutePosInTemplate(57, 25);
                                __internal.renderValue(dependency.getGroup(), false);
                                // PlainText @ [57:47]
                                __internal.aboutToExecutePosInTemplate(57, 47);
                                __internal.writeValue(PLAIN_TEXT_14_0);
                                // ValueExpression @ [57:48]
                                __internal.aboutToExecutePosInTemplate(57, 48);
                                __internal.renderValue(dependency.getArtifact(), false);
                                // PlainText @ [57:73]
                                __internal.aboutToExecutePosInTemplate(57, 73);
                                __internal.writeValue(PLAIN_TEXT_4_0);
                                // IfBlockEnd @ [54:13]
                                __internal.aboutToExecutePosInTemplate(54, 13);
                            } // if end @ [54:13]
                            // ForBlockEnd @ [53:9]
                            __internal.aboutToExecutePosInTemplate(53, 9);
                        } catch (com.fizzed.rocker.runtime.ContinueException e) {
                            // support for continuing for loops
                        }
                    }); // for end @ [53:9]
                } catch (com.fizzed.rocker.runtime.BreakException e) {
                    // support for breaking for loops
                }
                // WithBlockEnd @ [52:5]
                __internal.aboutToExecutePosInTemplate(52, 5);
            }); // with end @ [52:5]
            // PlainText @ [60:6]
            __internal.aboutToExecutePosInTemplate(60, 6);
            __internal.writeValue(PLAIN_TEXT_16_0);
        }
    }

    private static class PlainText {

        static private final String PLAIN_TEXT_0_0 = "plugins {\n    id 'application'\n    id 'org.jetbrains.kotlin.jvm' version '";
        static private final String PLAIN_TEXT_1_0 = "'\n";
        static private final String PLAIN_TEXT_2_0 = "    id \"";
        static private final String PLAIN_TEXT_3_0 = "\" version \"";
        static private final String PLAIN_TEXT_4_0 = "\"\n";
        static private final String PLAIN_TEXT_5_0 = "}\n\ngroup \"";
        static private final String PLAIN_TEXT_6_0 = "\"\nversion \"0.0.1\"\nmainClassName = \"";
        static private final String PLAIN_TEXT_7_0 = "\"\n\nrepositories {\n";
        static private final String PLAIN_TEXT_8_0 = "    ";
        static private final String PLAIN_TEXT_9_0 = "()\n";
        static private final String PLAIN_TEXT_10_0 = "    maven { url: \"";
        static private final String PLAIN_TEXT_11_0 = "\" }\n";
        static private final String PLAIN_TEXT_12_0 = "}\n\ndependencies {\n";
        static private final String PLAIN_TEXT_13_0 = "    implementation \"";
        static private final String PLAIN_TEXT_14_0 = ":";
        static private final String PLAIN_TEXT_15_0 = "    testImplementation \"";
        static private final String PLAIN_TEXT_16_0 = "}\n\nsourceSets {\n    main {\n        kotlin {\n            srcDirs 'src/main/kotlin'\n        }\n        resources {\n            srcDirs 'resources/main'\n        }\n    }\n    test {\n        kotlin {\n            srcDirs 'src/test/kotlin'\n        }\n        resources {\n            srcDirs 'resources/test'\n        }\n    }\n}";

    }

}
